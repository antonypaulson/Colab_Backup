{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Polynomial Linear Regression","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"t8dp_NurP94X","colab_type":"code","colab":{}},"cell_type":"code","source":["# Enter your code here. Read input from STDIN. Print output to STDOUT\n","# Enter your code here. Read input from STDIN. Print output to STDOUT\n","import numpy as np \n","import pandas as pd \n","a = input()\n","nfeat = a.split()[0]\n","nrows = a.split()[1]\n","ntrain = []\n","\n","for i in range(0, int(nrows)):\n","        line = input()\n","        row = line.split()\n","        ntrain.append(row)\n","frame = pd.DataFrame(ntrain)\n","X = frame.iloc[:,:-1]\n","y = frame.iloc[:,-1]\n","from sklearn import linear_model\n","from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import PolynomialFeatures\n","poly = PolynomialFeatures(degree = int(nfeat))\n","X_poly = poly.fit_transform(X)\n","lm = LinearRegression()\n","lm.fit(X_poly,y)\n","#print(lm.coef_)\n","\n","ntest = input()\n","test_list=[]\n","for i in range(0, int(ntest)):\n","    line = input()\n","    row_test = line.split()\n","    test_list.append(row_test)\n","frame_test = pd.DataFrame(test_list)\n","#print(frame_test)\n","prediction = lm.predict(poly.fit_transform(frame_test))\n","for i in prediction:\n","    print (i)\n"],"execution_count":0,"outputs":[]}]}